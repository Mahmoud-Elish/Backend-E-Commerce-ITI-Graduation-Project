// <auto-generated />
using System;
using E_Commerce.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.DAL.Migrations
{
    [DbContext(typeof(E_CommerceContext))]
    [Migration("20230707163936_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("E_Commerce.DAL.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartId = new Guid("e4081e63-6ccb-4980-a5a0-e7080694dea7"),
                            CustomerId = new Guid("c7d3e80a-7a4a-4c54-91a6-89c0df051c94")
                        },
                        new
                        {
                            CartId = new Guid("baa6607b-5909-4041-b24f-53e42e1f78e6"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7")
                        },
                        new
                        {
                            CartId = new Guid("cad5dbe9-9a63-4811-b2b6-8bce8cc9c038"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8")
                        },
                        new
                        {
                            CartId = new Guid("40ee2f1e-9007-413b-8864-774d91c33700"),
                            CustomerId = new Guid("e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc")
                        },
                        new
                        {
                            CartId = new Guid("dff97da0-e076-4872-a4ce-a63f3cf92918"),
                            CustomerId = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f")
                        },
                        new
                        {
                            CartId = new Guid("c3a96407-a315-4951-af75-6f53c1b9ceec"),
                            CustomerId = new Guid("22ac8dc9-4385-48ae-90a3-7d8c898c6d5d")
                        },
                        new
                        {
                            CartId = new Guid("63090912-be0a-45f9-9aba-41139f732100"),
                            CustomerId = new Guid("b6a76b15-33e5-4d26-98b9-c948c7823b84")
                        },
                        new
                        {
                            CartId = new Guid("06a1bde2-7ce3-4be0-9328-139574ce50ac"),
                            CustomerId = new Guid("0e67a2e5-df53-4a92-9854-8e1ad46a4e61")
                        },
                        new
                        {
                            CartId = new Guid("dfcb5aeb-378c-476a-a06f-5bfdb46d8331"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992b58")
                        },
                        new
                        {
                            CartId = new Guid("cd034007-6dfd-4951-95bc-bfbd02afdbae"),
                            CustomerId = new Guid("724587e6-9314-4fe6-9c3e-6fd612f50234")
                        },
                        new
                        {
                            CartId = new Guid("3a77b569-9809-4b6c-8714-be079a82ff03"),
                            CustomerId = new Guid("234cdf89-12a3-45b6-789c-0123456789de")
                        },
                        new
                        {
                            CartId = new Guid("699fcdd8-4dde-4a5f-a94c-a3c6850a93dd"),
                            CustomerId = new Guid("6789abcd-ef01-2345-6789-abcd01234567")
                        },
                        new
                        {
                            CartId = new Guid("84598136-6a26-4964-943d-59d7b0d89b7d"),
                            CustomerId = new Guid("bcdef012-3456-789a-bcde-f01234567890")
                        },
                        new
                        {
                            CartId = new Guid("3645f1e6-89cc-4b03-8ec6-1eeced9b013f"),
                            CustomerId = new Guid("2345cdef-0123-4567-89ab-cdef01234567")
                        },
                        new
                        {
                            CartId = new Guid("c9085f2a-a4c5-42e0-93c3-ae707a84fce5"),
                            CustomerId = new Guid("8901def0-1234-5678-9abc-def012345678")
                        },
                        new
                        {
                            CartId = new Guid("7896e531-408b-483c-b95a-e099b4ab5122"),
                            CustomerId = new Guid("23456789-01ab-cdef-0123-456789abcdef")
                        },
                        new
                        {
                            CartId = new Guid("47d1e1c7-d34b-4918-af83-3b9ce1adad10"),
                            CustomerId = new Guid("def01234-5678-9abc-def0-123456789abc")
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.CartProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CartId", "Size", "Color");

                    b.HasIndex("CartId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583"),
                            Description = "Men's Clothing",
                            Image = "men.jpg",
                            Name = "Men"
                        },
                        new
                        {
                            Id = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d"),
                            Description = "Women's Clothing",
                            Image = "Women.jpg",
                            Name = "Women"
                        },
                        new
                        {
                            Id = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f"),
                            Description = "Kids's Clothing",
                            Image = "Kids.jpg",
                            Name = "Kids"
                        },
                        new
                        {
                            Id = new Guid("f032f788-2340-431f-9f8f-eeb176a35177"),
                            Description = "Mens shirts's Clothing",
                            Image = "men shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("a6c4de53-33c5-48e1-9f21-5649726d3a3d"),
                            Description = "Women shirts's Clothing",
                            Image = "Women shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("8a6d4a19-47cc-4a4e-822b-cac1de2efc8d"),
                            Description = "Kids shirts's Clothing",
                            Image = "Kids shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("9a938bc1-0717-4b8d-8f8b-3a2f55de49db"),
                            Description = "Men Pants's Clothing",
                            Image = "men Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("d9f02e92-d14c-4b6d-86ad-6e4e6c48020a"),
                            Description = "Women Pants's Clothing",
                            Image = "Women Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("1d53debe-03e6-487f-9b34-6b26c68fc1e5"),
                            Description = "Kids Pants's Clothing",
                            Image = "Kids Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("6b3c4ef5-01ad-49c7-a8ff-36ae55d0ce8d"),
                            Description = "Men Shoes's Clothing",
                            Image = "men Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("35b303b9-25a0-4379-89b3-64e4ae51291f"),
                            Description = "Women Shoes's Clothing",
                            Image = "Women Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("ca09f6a1-5b87-4b56-9ee3-c6fb6ad070c2"),
                            Description = "Kids Shoes's Clothing",
                            Image = "Kids Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("6f6c6c4c-9e6e-4e0c-97cc-8b52c055918b"),
                            Description = "Men Jackets's Clothing",
                            Image = "men Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("47a38a48-8747-4461-ba32-7e573be663ee"),
                            Description = "Women Jackets's Clothing",
                            Image = "Women Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("b19a53a3-04e7-4804-84bc-84da64d738a6"),
                            Description = "Kids Jackets's Clothing",
                            Image = "Kids Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("a6d7e8b5-2f4d-4f51-b24b-4fcb52e36f5f"),
                            Description = "Men Hoodies's Clothing",
                            Image = "men Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("e18e42b7-799e-4b3b-a084-c55d4bb5da3f"),
                            Description = "Women Hoodies's Clothing",
                            Image = "Women Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("c2ae51c9-913a-4e7d-a7b5-ef1efc8f9d3e"),
                            Description = "Kids Hoodies's Clothing",
                            Image = "Kids Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.CustomerReview", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersReviews");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderData")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7d3e80a-7a4a-4c54-91a6-89c0df051c94"),
                            ArrivalDate = new DateTime(2029, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Iraq",
                            CustomerId = "07d96ed8-155d-49c7-a77a-615f109d77c3",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "567 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("6789abcd-ef01-2345-6789-abcd01234567"),
                            ArrivalDate = new DateTime(2029, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Libya",
                            CustomerId = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("8901def0-1234-5678-9abc-def012345678"),
                            ArrivalDate = new DateTime(2029, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Afghanistan",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7",
                            Discount = 0.0,
                            OrderData = new DateTime(2029, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Unpaid",
                            Street = "123 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("b6a76b15-33e5-4d26-98b9-c948c7823b84"),
                            ArrivalDate = new DateTime(2029, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Los Angeles",
                            Country = "Andorra",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "456 Maple Ave",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("07d96ed8-155d-49c7-a77a-615f109d77c3"),
                            ArrivalDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Zimbabwe",
                            CustomerId = "e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc",
                            Discount = 1.0,
                            OrderData = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("07d96ed8-155d-49c7-a77a-615f109d75c3"),
                            ArrivalDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Zimbabwe",
                            CustomerId = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            Discount = 1.0,
                            OrderData = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("0e67a2e5-df53-4a92-9854-8e1ad46a4e61"),
                            ArrivalDate = new DateTime(2027, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New York",
                            Country = "Belgium",
                            CustomerId = "0e67a2e5-df53-4a92-9854-8e1ad46a4e61",
                            Discount = 0.0,
                            OrderData = new DateTime(2027, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "123 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("22ac8dc9-4385-48ae-90a3-7d8c898c6d5d"),
                            ArrivalDate = new DateTime(2027, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Los Angeles",
                            Country = "Belize",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992b58",
                            Discount = 0.5,
                            OrderData = new DateTime(2027, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Shipped",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "456 Main St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f"),
                            ArrivalDate = new DateTime(2029, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Canada",
                            CustomerId = "724587e6-9314-4fe6-9c3e-6fd612f50234",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2028, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("23456789-01ab-cdef-0123-456789abcdef"),
                            ArrivalDate = new DateTime(2027, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Oman",
                            CustomerId = "234cdf89-12a3-45b6-789c-0123456789de",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2027, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "321 Maple Ave",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("2345cdef-0123-4567-89ab-cdef11234567"),
                            ArrivalDate = new DateTime(2027, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Taiwan",
                            CustomerId = "6789abcd-ef01-2345-6789-abcd01234567",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2027, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "567 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("def01234-5678-9abc-def0-113456789abc"),
                            ArrivalDate = new DateTime(2028, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Miami",
                            Country = "Fiji",
                            CustomerId = "bcdef012-3456-789a-bcde-f01234567890",
                            Discount = 0.29999999999999999,
                            OrderData = new DateTime(2028, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "901 Cherry Ln",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("e23edc32-bd6a-4b6b-a28e-ccf90b5c32dc"),
                            ArrivalDate = new DateTime(2028, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Boston",
                            Country = "Denmark",
                            CustomerId = "2345cdef-0123-4567-89ab-cdef01234567",
                            Discount = 0.14999999999999999,
                            OrderData = new DateTime(2028, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "246 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b5c7c49f"),
                            ArrivalDate = new DateTime(2029, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Canada",
                            CustomerId = "8901def0-1234-5678-9abc-def012345678",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50234"),
                            ArrivalDate = new DateTime(2029, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Dallas",
                            Country = "Samoa",
                            CustomerId = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "987 Cedar St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992b58"),
                            ArrivalDate = new DateTime(2029, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Diego",
                            Country = "Samoa",
                            CustomerId = "bcdef012-3456-789a-bcde-f01234567890",
                            Discount = 0.0,
                            OrderData = new DateTime(2029, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Unpaid",
                            Street = "456 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50233"),
                            ArrivalDate = new DateTime(2029, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Samoa",
                            CustomerId = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50232"),
                            ArrivalDate = new DateTime(2029, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Senegal",
                            CustomerId = "def01234-5678-9abc-def0-123456789abc",
                            Discount = 0.29999999999999999,
                            OrderData = new DateTime(2029, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "123 Maple Ave",
                            TotalPrice = 0m
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.OrderProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId", "Color", "Size");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdaa530f-7693-4f9d-b0b3-7775de81712e"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("7c05f821-ba90-4bce-b796-24696a0af7db"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("b50d2748-e694-4066-8a2d-0b6c13833c7a"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("72a3ff8d-25cf-4aa6-b82a-89fdb2cd5cda"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("44e73e7f-2cd0-4742-bedd-4b332ba787dc"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5993687d-0212-417c-944f-0f4cb8002c71"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9885651f-e32c-444a-88dc-edaddf6391ea"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5d34d28a-4385-427a-907d-6b81fed05ab1"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c4893e3c-9e0d-48c9-9854-aebda8e18d44"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("201aa630-a93e-4833-8764-9f4836aad47a"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c82671d0-2717-42b6-932a-90260f07ee94"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0ff531f5-0e92-4395-bc82-49966fb454b9"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f98f83ad-7180-4cc8-9bb5-84d07a10635d"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("edb6db18-0bfe-4261-99ff-76fd42bef439"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d7edf1d3-e754-440c-9174-17ac30bad654"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8e69d7b4-c0b9-48c8-a65e-222433d35e55"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0a453975-9e5b-445c-9f7a-70aed553cfad"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("746d36c6-753d-4200-a2b2-f7bfbecba54d"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e7477e01-893c-4325-894b-678c0b6c9c51"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("892928e8-efb8-4651-bb77-1fcabbd68d7c"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("16016271-36b8-44e0-9868-1caa155fc612"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("246848a7-fa9e-4413-9797-f1e41463d17b"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c2e6f467-3c87-4132-84ec-3f2a7008b69d"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2dd7f9ca-1417-4044-aba0-8d085c69d14b"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("af0079d5-6ce8-4ee7-98aa-5c082b72d1d2"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("96e75824-eefa-49ef-bc45-083f42869705"),
                            Description = "Classic denim jeans for men",
                            Discount = 0.05m,
                            Name = "Men's Jeans",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("dbed5e94-ea11-473c-bafa-afa1c415662e"),
                            Description = "Stylish blouse for women",
                            Discount = 0m,
                            Name = "Women's Blouse",
                            Price = 24.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5ad05cce-3b17-4de1-be77-1b1d95445180"),
                            Description = "Spacious backpack for kids",
                            Discount = 0m,
                            Name = "Kids' Backpack",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6925bd6b-9f6f-48dc-9895-9b65c93c47b8"),
                            Description = "Spacious backpack for kids",
                            Discount = 0m,
                            Name = "Kids' Backpack",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d6b4c9c4-0035-408f-ace2-373d72084458"),
                            Description = "Casual shorts for men",
                            Discount = 0.1m,
                            Name = "Men's Shorts",
                            Price = 17.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("056d82ad-cb02-40dd-8cf5-9ea4c696ba7d"),
                            Description = "Comfortable sandals for women",
                            Discount = 0.2m,
                            Name = "Women's Sandals",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("17aaf278-7f5b-4782-bdf4-2afb3e5e9056"),
                            Description = "Adorable t-shirt for kids",
                            Discount = 0m,
                            Name = "Kids' T-Shirt",
                            Price = 12.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a8cdb42a-1867-43cb-a880-c4b90a997db9"),
                            Description = "Stylish sneakers for men",
                            Discount = 0.15m,
                            Name = "Men's Sneakers",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("718cd15b-0168-4cb9-ad18-ad9423efef8e"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4f68c9c8-1f60-4be4-9d5b-eebc9b7b7c26"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4f78714c-8e18-4a07-988a-9c0ba7db24c2"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3f88b1d3-e408-405c-8064-a8116b1212c9"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a7de1332-0c55-4b03-8ada-c974ab66123b"),
                            Description = "Warm jacket for kids",
                            Discount = 0.1m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e87fe924-544e-42b7-b21a-7ff3b35558d4"),
                            Description = "Classic polo shirt for men",
                            Discount = 0m,
                            Name = "Men's Polo Shirt",
                            Price = 22.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9a100daa-77c5-4a4e-b109-0346a1d0b7ee"),
                            Description = "Stylish denim jeans for women",
                            Discount = 0.05m,
                            Name = "Women's Jeans",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("68cb8428-2b12-4647-93bf-578be76cc469"),
                            Description = "Cute dress for kids",
                            Discount = 0m,
                            Name = "Kids' Dress",
                            Price = 32.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("02503452-4e15-4853-a722-106117842afd"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("51d36c0d-667c-40c6-baa0-d3008d1ccc27"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4ce2d8d8-c118-4525-97d1-1be0de4a9530"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("305da32b-6c61-48b8-947a-309dcccbd091"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fbe753d4-7400-4fb0-ace4-a3de15ec9217"),
                            Description = "Sporty sneakers for women",
                            Discount = 0m,
                            Name = "Women's Sneakers",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a73a2580-8180-4816-af9b-9ce5bae283a5"),
                            Description = "Casual trousers for kids",
                            Discount = 0.1m,
                            Name = "Kids' Trousers",
                            Price = 21.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3a1fe294-fbd3-4098-bdf1-65ff2e0071f3"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6bcb88aa-338a-4b59-ae62-3fcb544bc811"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3adc25cd-5af3-4d47-a35b-30485dfc30e1"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("94ba28fa-f723-4546-8880-1daa75a8d030"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("b000723a-306c-4d99-9791-c03edc6bab4f"),
                            Description = "Stylish jacket for women",
                            Discount = 0m,
                            Name = "Women's Jacket",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("20d9bf0f-8bf4-4ac3-b1d7-ae57566d879a"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a9d93b11-0cbf-4653-9fbe-dea1427231e8"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("011a58aa-b8d5-43eb-b9fc-93319b76e497"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8726813e-26ac-49f3-b075-51d9a8d692d4"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("95ab300d-1bbf-4a5c-97c1-0b54e5ef8898"),
                            Description = "Warm sweater for men",
                            Discount = 0.1m,
                            Name = "Men's Sweater",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("07dc6006-14f0-416a-81b9-22bf98066c9e"),
                            Description = "Elegant blazer for women",
                            Discount = 0.2m,
                            Name = "Women's Blazer",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c136d1c2-368c-4750-a183-93c7375981e6"),
                            Description = "Casual shorts for kids",
                            Discount = 0m,
                            Name = "Kids' Shorts",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2c8bb1de-e254-4444-9ce1-3d54713c56f2"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ac45598b-7b11-4dd2-9660-505155227351"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6879e8f5-3edd-487f-b86d-b8a87c454051"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("73721658-dc7e-4781-a4e1-9abdf120d7b3"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f044996e-9b51-46bb-a142-b06edac83122"),
                            Description = "Cozy sweater for women",
                            Discount = 0m,
                            Name = "Women's Sweater",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8b060128-77e9-477c-85e6-725cfbb1a33a"),
                            Description = "Adorable shirt for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shirt",
                            Price = 17.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e4ab7da6-efd9-476d-b1f8-59a22e82efe1"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("d23c4d1e-4597-4c7f-9efc-c6438421b88c"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("31acf544-2ad1-4748-b576-dfc54b97e720"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6f3a2f7b-18eb-44e3-880a-866474487c45"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("dddd163c-4213-43ed-bd32-fa8b16fd031e"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("828ae579-bc5d-4819-99d9-9ff8c949278e"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fdd7d9e5-54aa-42e8-8b14-8b2bf8c54a1a"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2b5e4555-7549-4660-89ae-88de817b4f31"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9f55c196-d339-4c50-b664-843a0941a79a"),
                            Description = "Warm sweater for kids",
                            Discount = 0m,
                            Name = "Kids' Sweater",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1585d557-9e67-4f9e-8fc1-ab5f1a27c1a0"),
                            Description = "Warm sweater for kids",
                            Discount = 0m,
                            Name = "Kids' Sweater",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2e5bdb76-6b6a-4c78-bbfa-55402a1b7139"),
                            Description = "Sporty sneakers for men",
                            Discount = 0.1m,
                            Name = "Men's Sneakers",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f65365d0-dc26-49b5-bcb0-1cdcbe3d1323"),
                            Description = "Sporty sneakers for men",
                            Discount = 0.1m,
                            Name = "Men's Sneakers",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ff6c38b7-02a3-4e6e-bb27-3741dd4b92e9"),
                            Description = "Casual t-shirt for women",
                            Discount = 0.2m,
                            Name = "Women's T-Shirt",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9a82b88f-52e0-4866-a9f5-f819788719dc"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1f252b5e-3e94-4905-a6fa-0a25e152c1d7"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("8aabb90a-4479-4e02-a8d4-e578a3006988"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e7895206-a03c-47e9-8058-4bee07d6d265"),
                            Description = "Comfortable shorts for men",
                            Discount = 0m,
                            Name = "Men's Shorts",
                            Price = 24.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f6372dff-635f-4d6b-af5f-b09b90e95701"),
                            Description = "Fashionable sandals for women",
                            Discount = 0.1m,
                            Name = "Women's Sandals",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9d04ae65-a2c3-40ab-bb1e-5c8207419394"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a9e666fc-f8d5-4eda-b33c-842238071736"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers2",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6d649174-acd6-42d1-b396-df114a97f599"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers3",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c0681bd9-137d-42da-891a-8d48eefb4949"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers4",
                            Price = 34.99m,
                            Rate = 0m
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.ProductColorSizeQuantity", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "Color", "Size");

                    b.ToTable("ProductsInfo");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product_IMG", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductID", "ImageURL");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("bdaa530f-7693-4f9d-b0b3-7775de81712e"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("7c05f821-ba90-4bce-b796-24696a0af7db"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("b50d2748-e694-4066-8a2d-0b6c13833c7a"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("72a3ff8d-25cf-4aa6-b82a-89fdb2cd5cda"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("44e73e7f-2cd0-4742-bedd-4b332ba787dc"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("5993687d-0212-417c-944f-0f4cb8002c71"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("9885651f-e32c-444a-88dc-edaddf6391ea"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("5d34d28a-4385-427a-907d-6b81fed05ab1"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("c4893e3c-9e0d-48c9-9854-aebda8e18d44"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("201aa630-a93e-4833-8764-9f4836aad47a"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("c82671d0-2717-42b6-932a-90260f07ee94"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.WishList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductWishList", b =>
                {
                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WishListsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductsId", "WishListsId");

                    b.HasIndex("WishListsId");

                    b.ToTable("ProductWishList");
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<decimal?>("CardNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MidName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NameOnCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WishListID")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CartID")
                        .IsUnique()
                        .HasFilter("[CartID] IS NOT NULL");

                    b.HasIndex("WishListID")
                        .IsUnique()
                        .HasFilter("[WishListID] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Customer");

                    b.HasData(
                        new
                        {
                            Id = "07d96ed8-155d-49c7-a77a-615f109d77c3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ab4f8bc-3c46-4ddd-b0e8-eb9f5d5e2276",
                            Email = "johndoe@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7172ebe3-67ce-4102-8684-824aa5dbe1bd",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567890123456m,
                            City = "New York",
                            Country = "Ukraine",
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            MidName = "E",
                            NameOnCard = " John E Doe",
                            Role = "User",
                            Street = "123 Main St"
                        },
                        new
                        {
                            Id = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23b9cb72-e285-4cf2-b90b-67931d295eec",
                            Email = "janesmith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7b3bd596-f08d-4516-a207-dc64f86a814b",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210987654m,
                            City = "Los Angeles",
                            Country = "Turkey",
                            ExpireDate = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            MidName = "A",
                            NameOnCard = " Jane A Smith",
                            Role = "User",
                            Street = "456 Elm St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6f0999fe-02fc-4d37-b6be-bc36b4a08b1d",
                            Email = "emilyanderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0bcf2f6f-bac2-446e-ba8b-1d9d83cabb7c",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210123456m,
                            City = "San Francisco",
                            Country = "Australia",
                            ExpireDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            LastName = "Anderson",
                            MidName = "R",
                            NameOnCard = "Emily R Anderson",
                            Role = "User",
                            Street = "789 Elm St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a3e3cbbc-754c-496e-aa2e-ca3a2edb7465",
                            Email = "michaelwilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "444-555-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "49d27260-0170-4d87-9fca-e51c289eca2d",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "London",
                            Country = "Albania",
                            ExpireDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Wilson",
                            MidName = "J",
                            NameOnCard = "Michael J Wilson",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0d3d8c13-9b31-45ab-b9b3-7b17e11b7c49",
                            Email = "sarahthompson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-777-8888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0ca9e8b6-54df-4837-8dcd-c3d82ee84e10",
                            TwoFactorEnabled = false,
                            CardNumber = 9876012345678901m,
                            City = "Sydney",
                            Country = "Australia",
                            ExpireDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sarah",
                            LastName = "Thompson",
                            MidName = "L",
                            NameOnCard = "Sarah L Thompson",
                            Role = "User",
                            Street = "789 Pine St"
                        },
                        new
                        {
                            Id = "f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "163d67dc-2674-4307-a14a-c995669e113e",
                            Email = "davidmiller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "999-888-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "898257f2-0cc6-443c-8d4d-2ed4d4490232",
                            TwoFactorEnabled = false,
                            CardNumber = 5432109876543210m,
                            City = "Toronto",
                            Country = "Canada",
                            ExpireDate = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Miller",
                            MidName = "M",
                            NameOnCard = "David M Miller",
                            Role = "User",
                            Street = "123 Oak Ave"
                        },
                        new
                        {
                            Id = "22ac8dc9-4385-48ae-90a3-7d8c898c6d5d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "19801049-febe-42c1-a7db-f63312c3d2c4",
                            Email = "sophialee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "222-333-4444",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a068607c-6951-49a4-b913-8e68d3064563",
                            TwoFactorEnabled = false,
                            CardNumber = 1234554321098765m,
                            City = "Seoul",
                            Country = "Serbia",
                            ExpireDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Lee",
                            MidName = "K",
                            NameOnCard = "Sophia K Lee",
                            Role = "User",
                            Street = "456 Cedar St"
                        },
                        new
                        {
                            Id = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4e9e848b-05ce-4429-aaf8-ea33b448e6ee",
                            Email = "danielmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "79c3e904-b3a9-4803-b27b-520f042fdf04",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210012345m,
                            City = "Madrid",
                            Country = "Spain",
                            ExpireDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Daniel",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Daniel T Martinez",
                            Role = "User",
                            Street = "789 Walnut Ave"
                        },
                        new
                        {
                            Id = "0e67a2e5-df53-4a92-9854-8e1ad46a4e61",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "842693d2-3212-47ea-98a4-ea923b543918",
                            Email = "oliviabrown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "888-777-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "57648648-5797-4a47-be67-4345302cea53",
                            TwoFactorEnabled = false,
                            CardNumber = 5432101234567890m,
                            City = "Paris",
                            Country = "France",
                            ExpireDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Brown",
                            MidName = "N",
                            NameOnCard = "Olivia N Brown",
                            Role = "User",
                            Street = "123 Cherry St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992b58",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "41751d07-a523-427e-81bd-bc421f954d65",
                            Email = "alexjohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d325d67a-c3b8-4dba-b570-9c8256acf2b1",
                            TwoFactorEnabled = false,
                            CardNumber = 5432167890123456m,
                            City = "Chicago",
                            Country = "Zimbabwe",
                            ExpireDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alex",
                            LastName = "Johnson",
                            MidName = "S",
                            NameOnCard = " Alex S Johnson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "724587e6-9314-4fe6-9c3e-6fd612f50234",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32e6475d-1db9-4410-8b86-7b9c9050638d",
                            Email = "williamtaylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b8de63af-28bc-4a5d-9a01-9388ad20d101",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567812345678m,
                            City = "London",
                            Country = "Andorra",
                            ExpireDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "William",
                            LastName = "Taylor",
                            MidName = "G",
                            NameOnCard = "William G Taylor",
                            Role = "User",
                            Street = "123 Elm St"
                        },
                        new
                        {
                            Id = "234cdf89-12a3-45b6-789c-0123456789de",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4cdadc86-7d78-45ac-9b44-d42c918152b7",
                            Email = "emmajdavis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "444-555-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fbcbc93b-b641-4f3b-96a1-21e6c1cdf5d7",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543298765432m,
                            City = "New York",
                            Country = "Bangladesh",
                            ExpireDate = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emma",
                            LastName = "Davis",
                            MidName = "J",
                            NameOnCard = "Emma J Davis",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "6789abcd-ef01-2345-6789-abcd01234567",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d84dde9a-807a-46df-9697-a39931fcaeb1",
                            Email = "liammwilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fccddce7-d6fc-4913-b657-cfc0e2f305ed",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "Los Angeles",
                            Country = "Somalia",
                            ExpireDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Liam",
                            LastName = "Wilson",
                            MidName = "M",
                            NameOnCard = "Liam M Wilson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "bcdef012-3456-789a-bcde-f01234567890",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d7ac17af-149d-4c65-810f-7313d25a4946",
                            Email = "olivialthompson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-777-8888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7331239-41cf-4c30-93e3-e13b6b572de0",
                            TwoFactorEnabled = false,
                            CardNumber = 9876012345678901m,
                            City = "Sydney",
                            Country = "Australia",
                            ExpireDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Thompson",
                            MidName = "L",
                            NameOnCard = "Olivia L Thompson",
                            Role = "User",
                            Street = "123 Pine St"
                        },
                        new
                        {
                            Id = "2345cdef-0123-4567-89ab-cdef01234567",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7f672fe2-0777-47c2-a104-fcfd488315d4",
                            Email = "noahajohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "222-333-4444",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "669e3682-60c6-4e3a-8d8e-fcb1d089313c",
                            TwoFactorEnabled = false,
                            CardNumber = 1234554321098765m,
                            City = "Seattle",
                            Country = "Kiribati",
                            ExpireDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Noah",
                            LastName = "Johnson",
                            MidName = "A",
                            NameOnCard = "Noah A Johnson",
                            Role = "User",
                            Street = "456 Cedar St"
                        },
                        new
                        {
                            Id = "8901def0-1234-5678-9abc-def012345678",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "41e21621-d51f-4c79-8a8e-4a49e50079e9",
                            Email = "avaklee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3a89519-79c5-41e0-a648-5b21eb729dd5",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543298765432m,
                            City = "San Francisco",
                            Country = "Uruguay",
                            ExpireDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ava",
                            LastName = "Lee",
                            MidName = "K",
                            NameOnCard = "Ava K Lee",
                            Role = "User",
                            Street = "789 Walnut Ave"
                        },
                        new
                        {
                            Id = "23456789-01ab-cdef-0123-456789abcdef",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ee6962df-6de0-4f51-a663-dd88260f41b5",
                            Email = "isabellatmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "888-777-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c712b157-d3cb-4759-8d64-0469bb99699a",
                            TwoFactorEnabled = false,
                            CardNumber = 5432109876543210m,
                            City = "Madrid",
                            Country = "Spain",
                            ExpireDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isabella",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Isabella T Martinez",
                            Role = "User",
                            Street = "123 Cherry St"
                        },
                        new
                        {
                            Id = "def01234-5678-9abc-def0-123456789abc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5d687657-472d-425f-b1cf-5d1276546ce4",
                            Email = "sophianbrown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "999-888-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a83ed72c-72fa-4a85-80ca-9b8e327d96a3",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567812345678m,
                            City = "Paris",
                            Country = "France",
                            ExpireDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Brown",
                            MidName = "N",
                            NameOnCard = "Sophia N Brown",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "456789ab-cdef-0123-4567-89abcdef0123",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a2bf746d-0bf8-41a9-888e-ba951c2aa403",
                            Email = "miasjohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11ba8ad3-5e00-40b6-9d08-9c83d196e3fb",
                            TwoFactorEnabled = false,
                            CardNumber = 5432167890123456m,
                            City = "Rome",
                            Country = "Italy",
                            ExpireDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mia",
                            LastName = "Johnson",
                            MidName = "S",
                            NameOnCard = "Mia S Johnson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "56789abc-def0-1234-5678-9abcdef01234",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4fff0a1f-9e4e-4596-b023-c2a05b60415b",
                            Email = "logantmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0be9eeb3-9269-4e35-82c2-22522032c89d",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "Tokyo",
                            Country = "Japan",
                            ExpireDate = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Logan",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Logan T Martinez",
                            Role = "User",
                            Street = "123 Walnut Ave"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.CartProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Cart", "Cart")
                        .WithMany("Products")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.HasOne("E_Commerce.DAL.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("E_Commerce.DAL.CustomerReview", b =>
                {
                    b.HasOne("E_Commerce.DAL.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.HasOne("E_Commerce.DAL.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerce.DAL.OrderProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.ProductColorSizeQuantity", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Product_Color_Size_Quantity")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product_IMG", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductWishList", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.WishList", null)
                        .WithMany()
                        .HasForeignKey("WishListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.HasOne("E_Commerce.DAL.Cart", "Cart")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce.DAL.Customer", "CartID");

                    b.HasOne("E_Commerce.DAL.WishList", "WishList")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce.DAL.Customer", "WishListID");

                    b.Navigation("Cart");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("E_Commerce.DAL.Cart", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductOrders");

                    b.Navigation("Product_Color_Size_Quantity");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("E_Commerce.DAL.WishList", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
